{"version":3,"sources":["user.controller.js"],"names":["require","User","userController","getAllUsers","req","res","find","populate","path","select","sort","_id","then","dbUserData","json","err","console","log","status","getUserById","params","findOne","id","sendStatus","createUser","body","create","updateUser","findOneAndUpdate","runValidators","message","deleteUser","findOneAndDelete","updateMany","$in","friends","$pull","userId","Thought","deleteMany","username","addToFriendList","$push","friendId","removefromFriendList","thoghtId","deletedFriend","module","exports"],"mappings":"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","sourcesContent":["const {\r\n    User\r\n} = require('../models');\r\n\r\nconst userController = {\r\n\r\n    //get all users\r\n    getAllUsers(req, res) {\r\n        User.find({})\r\n            .populate({\r\n                path: 'thoughts',\r\n                //allows to remove __v from visuals\r\n                select: ('-__v')\r\n            })\r\n            .populate({\r\n                path: 'friends',\r\n                select: ('-__v')\r\n            })\r\n            .select('-__v')\r\n            // sort by descending order by the _id value\r\n            .sort({\r\n                _id: -1\r\n            })\r\n            .then(dbUserData => res.json(dbUserData))\r\n            .catch(err => {\r\n                console.log(err);\r\n                res.status(500).json(err);\r\n            });\r\n    },\r\n\r\n    //get one user by id\r\n    getUserById({\r\n        params\r\n    }, res) {\r\n        User.findOne({\r\n                _id: params.id\r\n            })\r\n            .populate({\r\n                path: 'thoughts',\r\n                select: '-__v'\r\n            })\r\n            .select('-__v')\r\n            .then(dbUserData => res.json(dbUserData))\r\n            .catch(err => {\r\n                console.log(err);\r\n                res.sendStatus(400);\r\n            });\r\n    },\r\n\r\n    //create user\r\n    createUser({\r\n        body\r\n    }, res) {\r\n        User.create(body)\r\n            .then(dbUserData => res.json(dbUserData))\r\n            .catch(err => res.status(400).json(err));\r\n    },\r\n\r\n    //update user by id\r\n    updateUser({\r\n        params,\r\n        body\r\n    }, res) {\r\n        User.findOneAndUpdate({\r\n                _id: params.id\r\n            }, body, {\r\n                new: true,\r\n                runValidators: true\r\n            })\r\n            .then(dbUserData => {\r\n                if (!dbUserData) {\r\n                    res.status(404).json({\r\n                        message: 'No user found with this id.'\r\n                    });\r\n                    return;\r\n                }\r\n                res.json(dbUserData);\r\n            })\r\n            .catch(err => res.status(400).json(err));\r\n    },\r\n\r\n    //delete user\r\n    deleteUser({\r\n        params\r\n    }, res) {\r\n        User.findOneAndDelete({\r\n                _id: params.id\r\n            })\r\n            .then(dbUserData => {\r\n                if (!dbUserData) {\r\n                    res.status(404).json({\r\n                        message: 'No user found with this id.'\r\n                    });\r\n                    return;\r\n                }\r\n                return dbUserData;\r\n            })\r\n            .then(dbUserData => {\r\n                User.updateMany({\r\n                        _id: {\r\n                            $in: dbUserData.friends\r\n                        }\r\n                    }, {\r\n                        $pull: {\r\n                            friends: params.userId\r\n                        }\r\n                    })\r\n                    .then(() => {\r\n                        //deletes user's thought associated with id\r\n                        Thought.deleteMany({\r\n                                username: dbUserData.username\r\n                            })\r\n                            .then(() => {\r\n                                res.json({\r\n                                    message: 'User deleted successfully'\r\n                                });\r\n                            })\r\n                            .catch(err => {\r\n                                console.log(err);\r\n                                res.status(400).json(err);\r\n                            })\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                        res.status(400).json(err);\r\n                    })\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                res.status(400).json(err);\r\n            })\r\n    },\r\n\r\n    //add friends\r\n    addToFriendList({\r\n        params\r\n    }, res) {\r\n        User.findOneAndUpdate({\r\n                _id: params.userId\r\n            }, {\r\n                $push: {\r\n                    friends: params.friendId\r\n                }\r\n            }, {\r\n                new: true\r\n            })\r\n            .then(dbUserData => {\r\n                if (!dbUserData) {\r\n                    res.status(404).json({\r\n                        message: 'No user found!'\r\n                    });\r\n                    return;\r\n                }\r\n                res.json(dbUserData);\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                res.json(err)\r\n            });\r\n    },\r\n\r\n    //delete friend\r\n    removefromFriendList({\r\n        params\r\n    }, res) {\r\n        User.findOneAndDelete({\r\n                _id: params.thoghtId\r\n            })\r\n            .then(deletedFriend => {\r\n                if (!deletedFriend) {\r\n                    return res.status(404).json({\r\n                        message: 'No friend found.'\r\n                    })\r\n                }\r\n                return User.findOneAndUpdate({\r\n                    friends: params.friendId\r\n                }, {\r\n                    $pull: {\r\n                        friends: params.friendId\r\n                    }\r\n                }, {\r\n                    new: true\r\n                });\r\n            })\r\n            .then(dbUserData => {\r\n                if (!dbUserData) {\r\n                    res.status(404).json({\r\n                        message: 'No friend found.'\r\n                    })\r\n                    return;\r\n                }\r\n                res.json(dbUserData);\r\n            })\r\n            .catch(err => res.json(err));\r\n    },\r\n};\r\n\r\nmodule.exports = userController;"],"file":"user.controller.dev.js"}